---
import type { HTMLAttributes } from "astro/types";
import { cva, type VariantProps } from "class-variance-authority";
import { cn } from "@/lib/utils";

export const button = cva(
  "inline-flex items-center justify-center whitespace-nowrap rounded text-sm font-semibold ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary  disabled:pointer-events-none disabled:opacity-50",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground hover:bg-primary/90 focus-visible:ring-offset-2",
        ghost: "hover:bg-hover",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "px-4 py-1.5 text-base",
        sm: " rounded px-3 py-1 text-sm",
        lg: "font-bold text-base rounded px-8 py-1.5",
        icon: "h-10 w-10",
      },
    },
  }
);

export interface Props
  extends HTMLAttributes<"button">,
    VariantProps<typeof button> {
  className?: string;
}

const {
  variant = "default",
  size = "default",
  className,
  ...rest
} = Astro.props;
---

<button class={cn(button({ variant, size, className }))} {...rest}>
  <slot />
</button>
